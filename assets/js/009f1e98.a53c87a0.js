"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[715],{3511:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"getting-started/configuration","title":"Configuration","description":"Configuration setup for Elsai ARMS. The elsai-arms package requires minimal setup.","source":"@site/docs/getting-started/configuration.md","sourceDirName":"getting-started","slug":"/getting-started/configuration","permalink":"/elsai_arms_docs/docs/getting-started/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/elsai_arms_docs/docs/category/getting-started"},"next":{"title":"Installation","permalink":"/elsai_arms_docs/docs/getting-started/installation"}}');var i=t(4848),o=t(8453);const s={sidebar_position:1},a="Configuration",c={},d=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Project and Run Structure",id:"project-and-run-structure",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,i.jsxs)(n.p,{children:["Configuration setup for Elsai ARMS. The ",(0,i.jsx)(n.code,{children:"elsai-arms"})," package requires minimal setup."]}),"\n",(0,i.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,i.jsxs)(n.p,{children:["Configuration is handled via environment variables using a ",(0,i.jsx)(n.code,{children:".env"})," file. These variables are loaded automatically when the application starts.\nBefore using ",(0,i.jsx)(n.code,{children:"elsai-arms"}),", you need to set up a ",(0,i.jsx)(n.code,{children:".env"})," file for ARMS and MongoDB configuration:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-env",children:"ELSAI_ARMS_API_KEY = <your_api_key>\nMONGO_URI = <your_mongo_uri>\nDB_NAME = <your_database_name>\n"})}),"\n",(0,i.jsx)(n.p,{children:"The database credentials are used to connect to your MongoDB instance. If you're using Docker, you can link a MongoDB container and update the URI accordingly."}),"\n",(0,i.jsx)(n.h2,{id:"project-and-run-structure",children:"Project and Run Structure"}),"\n",(0,i.jsx)(n.p,{children:"Each API key and project combination creates a unique document in the MongoDB collection. The structure looks like this:"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"api_key"}),": Identifier for the user or agent."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"project"}),": Name of the tracked project."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"runs"}),": Array of individual run logs with metadata."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"metrics"}),": Aggregated data like token usage, cost, success rate, execution time."]}),"\n",(0,i.jsx)(n.p,{children:"This structure supports real-time and historical monitoring across runs."})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);