"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[715],{3511:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"getting-started/configuration","title":"Configuration","description":"Configuration setup for ElsaiARMS. The elsai-arms package requires minimal setup to get started.","source":"@site/docs/getting-started/configuration.md","sourceDirName":"getting-started","slug":"/getting-started/configuration","permalink":"/elsai_arms_docs/docs/getting-started/configuration","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/elsai_arms_docs/docs/getting-started/installation"},"next":{"title":"User Guide","permalink":"/elsai_arms_docs/docs/user_guide"}}');var s=i(4848),r=i(8453);const t={sidebar_position:2},a="Configuration",d={},l=[{value:"Environment Setup",id:"environment-setup",level:2},{value:"Required Configuration",id:"required-configuration",level:3},{value:"Configuration Details",id:"configuration-details",level:3},{value:"ElsaiARMS API Key",id:"elsaiarms-api-key",level:4},{value:"MongoDB Configuration",id:"mongodb-configuration",level:4},{value:"Docker Setup",id:"docker-setup",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,s.jsxs)(n.p,{children:["Configuration setup for ElsaiARMS. The ",(0,s.jsx)(n.code,{children:"elsai-arms"})," package requires minimal setup to get started."]}),"\n",(0,s.jsx)(n.h2,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,s.jsxs)(n.p,{children:["Configuration is handled via environment variables using a ",(0,s.jsx)(n.code,{children:".env"})," file. These variables are loaded automatically when the application starts."]}),"\n",(0,s.jsx)(n.h3,{id:"required-configuration",children:"Required Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Before using ",(0,s.jsx)(n.code,{children:"elsai-arms"}),", you need to set up a ",(0,s.jsx)(n.code,{children:".env"})," file in your project root directory with the following variables:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ELSAI_ARMS_API_KEY=<your_api_key>\n\nMONGO_URI=<your_mongo_uri>\nDB_NAME=<your_database_name>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configuration-details",children:"Configuration Details"}),"\n",(0,s.jsx)(n.h4,{id:"elsaiarms-api-key",children:"ElsaiARMS API Key"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Purpose"}),": Authenticates your application with ElsaiARMS services"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Format"}),": String token provided during account setup"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Example"}),": ",(0,s.jsx)(n.code,{children:"ELSAI_ARMS_API_KEY=sk-arms-1234567890abcdef"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"mongodb-configuration",children:"MongoDB Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MONGO_URI"}),": Connection string for your MongoDB instance"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DB_NAME"}),": Name of the database to store ElsaiARMS data"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example MongoDB configurations:"})}),"\n",(0,s.jsx)(n.p,{children:"Local MongoDB:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"MONGO_URI=mongodb://localhost:27017\nDB_NAME=elsai_arms_db\n"})}),"\n",(0,s.jsx)(n.p,{children:"MongoDB Atlas (Cloud):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"MONGO_URI=mongodb+srv://username:password@cluster.mongodb.net/?retryWrites=true&w=majority\nDB_NAME=elsai_arms_db\n"})}),"\n",(0,s.jsx)(n.p,{children:"Docker MongoDB:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"MONGO_URI=mongodb://mongodb:27017\nDB_NAME=elsai_arms_db\n"})}),"\n",(0,s.jsx)(n.h2,{id:"docker-setup",children:"Docker Setup"}),"\n",(0,s.jsx)(n.p,{children:"If you're using Docker, you can link a MongoDB container and update the URI accordingly:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# docker-compose.yml\nversion: '3.12'\nservices:\n  mongodb:\n    image: mongo:latest\n    container_name: elsai-arms-mongodb\n    ports:\n      - \"27017:27017\"\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: admin\n      MONGO_INITDB_ROOT_PASSWORD: password\n    volumes:\n      - mongodb_data:/data/db\n\n  elsai-arms:\n    build: .\n    container_name: elsai-arms-app\n    depends_on:\n      - mongodb\n    environment:\n      - MONGO_URI=mongodb://admin:password@mongodb:27017\n      - DB_NAME=elsai_arms_db\n      - ELSAI_ARMS_API_KEY=${ELSAI_ARMS_API_KEY}\n\nvolumes:\n  mongodb_data:\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.p,{children:["With configuration complete, you're ready to start using ElsaiARMS! Check out our ",(0,s.jsx)(n.a,{href:"/elsai_arms_docs/docs/user_guide",children:"User Guide"})," to begin monitoring and governing your AI operations."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var o=i(6540);const s={},r=o.createContext(s);function t(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);